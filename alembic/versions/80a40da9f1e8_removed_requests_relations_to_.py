"""removed requests relations to appointments and users

Revision ID: 80a40da9f1e8
Revises: 7998ce13582f
Create Date: 2024-06-23 21:36:36.315790

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '80a40da9f1e8'
down_revision: Union[str, None] = '7998ce13582f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('requests_ibfk_4', 'requests', type_='foreignkey')
    op.drop_constraint('requests_ibfk_1', 'requests', type_='foreignkey')
    op.drop_constraint('requests_ibfk_2', 'requests', type_='foreignkey')
    op.drop_constraint('requests_ibfk_3', 'requests', type_='foreignkey')
    op.drop_column('requests', 'doctor_who_will_cover_id')
    op.drop_column('requests', 'appointment_to_exchange_id')
    op.drop_column('requests', 'doctor_to_include_id')
    op.drop_column('requests', 'existing_appointment_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('requests', sa.Column('existing_appointment_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('requests', sa.Column('doctor_to_include_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('requests', sa.Column('appointment_to_exchange_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('requests', sa.Column('doctor_who_will_cover_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.create_foreign_key('requests_ibfk_3', 'requests', 'users', ['doctor_who_will_cover_id'], ['id'])
    op.create_foreign_key('requests_ibfk_2', 'requests', 'users', ['doctor_to_include_id'], ['id'])
    op.create_foreign_key('requests_ibfk_1', 'requests', 'appointments', ['appointment_to_exchange_id'], ['id'])
    op.create_foreign_key('requests_ibfk_4', 'requests', 'appointments', ['existing_appointment_id'], ['id'])
    # ### end Alembic commands ###
