"""added next/previous to Month and added gen_new_month basic logic

Revision ID: c564b7ccafcd
Revises: fc23456d4c14
Create Date: 2024-06-09 12:17:39.047500

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c564b7ccafcd'
down_revision: Union[str, None] = 'fc23456d4c14'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('months', sa.Column('next_month_id', sa.Integer(), nullable=True))
    op.add_column('months', sa.Column('previous_month_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'months', 'months', ['next_month_id'], ['id'])
    op.create_foreign_key(None, 'months', 'months', ['previous_month_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'months', type_='foreignkey')
    op.drop_constraint(None, 'months', type_='foreignkey')
    op.drop_column('months', 'previous_month_id')
    op.drop_column('months', 'next_month_id')
    # ### end Alembic commands ###
